#!/usr/bin/env node

import { createRequire } from 'module';
const require = createRequire(import.meta.url);

import {
  teeCommand
} from "./chunk-NXAV63GD.js";
import {
  test
} from "./chunk-AR4QAD6Y.js";
import {
  start
} from "./chunk-TJFULA67.js";
import "./chunk-O3UP5QHP.js";
import "./chunk-SHPZMT5X.js";
import {
  update
} from "./chunk-V4PVQFZ5.js";
import "./chunk-VN7BGJ3T.js";
import {
  agent
} from "./chunk-CP2SCNOS.js";
import {
  create
} from "./chunk-7UKXELNR.js";
import {
  displayBanner,
  loadEnvironment
} from "./chunk-5ICVFLOJ.js";
import "./chunk-JE3WCXNS.js";
import {
  dev
} from "./chunk-QY4IXWF5.js";
import "./chunk-5GTCUWAK.js";
import {
  env
} from "./chunk-5Z47LKWX.js";
import "./chunk-XKA2ZD3D.js";
import {
  plugin
} from "./chunk-EMCUAFBU.js";
import {
  project
} from "./chunk-XVR67WIR.js";
import "./chunk-EBPMC34H.js";
import {
  publish
} from "./chunk-36ICN22Z.js";
import "./chunk-M6QKWXHS.js";
import "./chunk-LRSU7IN6.js";
import "./chunk-VI5W7VMD.js";
import "./chunk-AOCSN5JE.js";
import "./chunk-LIA2BGYJ.js";
import "./chunk-XDVWGVQZ.js";
import "./chunk-CGF4ITLZ.js";
import {
  Command
} from "./chunk-5LH7NKB4.js";
import {
  logger
} from "./chunk-H473MSWF.js";
import "./chunk-MIME4LLQ.js";
import "./chunk-HRNFSMKW.js";
import "./chunk-567UPUC7.js";

// src/index.ts
import fs from "node:fs";
import path from "node:path";
import { dirname } from "node:path";
import { fileURLToPath } from "node:url";
process.env.NODE_OPTIONS = "--no-deprecation";
process.env.NODE_NO_WARNINGS = "1";
process.on("SIGINT", () => process.exit(0));
process.on("SIGTERM", () => process.exit(0));
async function main() {
  await loadEnvironment();
  const __filename = fileURLToPath(import.meta.url);
  const __dirname = dirname(__filename);
  const packageJsonPath = path.resolve(__dirname, "../package.json");
  let version = "0.0.0";
  if (!fs.existsSync(packageJsonPath)) {
  } else {
    const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, "utf-8"));
    version = packageJson.version;
  }
  const program = new Command().name("elizaos").version(version);
  program.addCommand(create).addCommand(project).addCommand(plugin).addCommand(agent).addCommand(teeCommand).addCommand(start).addCommand(update).addCommand(test).addCommand(env).addCommand(dev).addCommand(publish);
  if (process.argv.length === 2) {
    displayBanner(version);
  }
  await program.parseAsync();
}
main().catch((error) => {
  logger.error("An error occurred:", error);
  process.exit(1);
});
