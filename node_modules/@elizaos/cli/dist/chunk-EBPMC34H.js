
import { createRequire } from 'module';
const require = createRequire(import.meta.url);

import {
  getPluginVersion
} from "./chunk-VI5W7VMD.js";
import {
  execa
} from "./chunk-LIA2BGYJ.js";
import {
  logger
} from "./chunk-H473MSWF.js";

// src/utils/install-plugin.ts
async function installPlugin(repository, cwd, version) {
  logger.info(`Installing plugin: ${repository}`);
  if (version) {
    try {
      await execa("bun", ["add", `${repository}@${version}`], {
        cwd,
        stdio: "inherit"
      });
      return true;
    } catch (error) {
      logger.debug("Plugin not found on npm, trying to install from registry...");
    }
  }
  try {
    let repoUrl = repository;
    if (repoUrl.startsWith("git+")) {
      repoUrl = repoUrl.substring(4);
    }
    if (repoUrl.endsWith(".git")) {
      repoUrl = repoUrl.slice(0, -4);
    }
    let installVersion = "";
    if (version) {
      const resolvedVersion = await getPluginVersion(repoUrl, version);
      if (!resolvedVersion) {
        logger.error(`Version ${version} not found for plugin ${repoUrl}`);
        return false;
      }
      installVersion = `#${resolvedVersion}`;
    }
    await execa("bun", ["add", `${repoUrl}${installVersion}`], {
      cwd,
      stdio: "inherit"
    });
    return true;
  } catch (error) {
    logger.error("Failed to install plugin:", error);
    return false;
  }
}

export {
  installPlugin
};
